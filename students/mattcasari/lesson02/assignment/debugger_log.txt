----------------------------
(assignment) PS C:\Users\casari\version-control\UW\SP_Python220B_2019\students\mattcasari\lesson02\assignment> py -m pdb .\charges_calc.py
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(3)<module>()
-> '''
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(4)<module>()
-> import argparse
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(5)<module>()
-> import json
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(6)<module>()
-> import datetime
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(7)<module>()
-> import math
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(9)<module>()
-> def parse_cmd_arguments():
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(17)<module>()
-> def load_rentals_file(filename):
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(25)<module>()
-> def calculate_additional_fields(data):
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(39)<module>()
-> def save_to_json(filename, data):
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(43)<module>()
-> if __name__ == "__main__":
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(44)<module>()
-> args = parse_cmd_arguments()
(Pdb) s
--Call--
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(9)parse_cmd_arguments()
-> def parse_cmd_arguments():
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(10)parse_cmd_arguments()
-> parser = argparse.ArgumentParser(description='Process some integers.')
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(11)parse_cmd_arguments()
-> parser.add_argument('-i', '--input', help='input JSON file', required=True)
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(12)parse_cmd_arguments()
-> parser.add_argument('-o', '--output', help='ouput JSON file', required=True)
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(14)parse_cmd_arguments()
-> return parser.parse_args()
(Pdb) n
usage: charges_calc.py [-h] -i INPUT -o OUTPUT
charges_calc.py: error: the following arguments are required: -i/--input, -o/--output
SystemExit: 2
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(14)parse_cmd_arguments()
-> return parser.parse_args()
(Pdb) n
--Return--
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(14)parse_cmd_arguments()->None
-> return parser.parse_args()
(Pdb) exit

# ANALYSIS:
# The script requires a -i input_file and -o output_file to run


----------------------------

--Call--
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(25)calculate_additional_fields()
-> def calculate_additional_fields(data):
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(26)calculate_additional_fields()
-> for value in data.values():
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(27)calculate_additional_fields()
-> try:
(Pdb) pp value
{'price_per_day': 31,
 'product_code': 'PRD80',
 'rental_end': '3/22/17',
 'rental_start': '6/12/17',
 'units_rented': 8}
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(28)calculate_additional_fields()
-> rental_start = datetime.datetime.strptime(value['rental_start'], '%m/%d/%y')
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(29)calculate_additional_fields()
-> rental_end = datetime.datetime.strptime(value['rental_end'], '%m/%d/%y')
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(30)calculate_additional_fields()
-> value['total_days'] = (rental_end - rental_start).days
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(31)calculate_additional_fields()
-> value['total_price'] = value['total_days'] * value['price_per_day']
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(32)calculate_additional_fields()
-> value['sqrt_total_price'] = math.sqrt(value['total_price'])
(Pdb) n
ValueError: math domain error
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(32)calculate_additional_fields()
-> value['sqrt_total_price'] = math.sqrt(value['total_price'])
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(34)calculate_additional_fields()
-> except:
(Pdb) pp value
{'price_per_day': 31,
 'product_code': 'PRD80',
 'rental_end': '3/22/17',
 'rental_start': '6/12/17',
 'total_days': -82,
(assignment) PS C:\Users\casari\version-control\UW\SP_Python220B_2019\students\mattcasari\lesson02\assignment> py -m pdb .\charges_calc.py -i .\source.json -o output.json
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(3)<module>()
-> '''
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(4)<module>()
-> import argparse
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(5)<module>()
-> import json
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(6)<module>()
-> import datetime
(Pdb) b 44
Breakpoint 1 at c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py:44
(Pdb) c
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(44)<module>()
-> args = parse_cmd_arguments()
(Pdb) s
--Call--
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(9)parse_cmd_arguments()
-> def parse_cmd_arguments():
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(10)parse_cmd_arguments()
-> parser = argparse.ArgumentParser(description='Process some integers.')
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(11)parse_cmd_arguments()
-> parser.add_argument('-i', '--input', help='input JSON file', required=True)
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(12)parse_cmd_arguments()
-> parser.add_argument('-o', '--output', help='ouput JSON file', required=True)
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(14)parse_cmd_arguments()
-> return parser.parse_args()
(Pdb) n
--Return--
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(14)parse_cmd_arguments()->Namespace(inp...'output.json')
-> return parser.parse_args()
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(45)<module>()
-> data = load_rentals_file(args.input)
(Pdb) s
--Call--
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(17)load_rentals_file()
-> def load_rentals_file(filename):
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(18)load_rentals_file()
-> with open(filename) as file:
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(19)load_rentals_file()
-> try:
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(20)load_rentals_file()
-> data = json.load(file)
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(23)load_rentals_file()
-> return data
(Pdb) n
--Return--
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(23)load_rentals_file()->{'RNT001': {'price_per_day': 31, 'product_code': 'PRD80', 'rental_end': '3/22/17', 'rental_start': '6/12/17', ...}, 'RNT002': {'price_per_day': 16, 'product_code': 'PRD11', 'rental_end': '9/30/18', 'rental_start': '7/20/16', ...}, 'RNT003': {'price_per_day': 40, 'product_code': 'PRD22', 'rental_end': '6/4/17', 'rental_start': '2/1/16', ...}, 'RNT004': {'price_per_day': 40, 'product_code': 'PRD86', 'rental_end': '12/7/17', 'rental_start': '8/14/16', ...}, ...}
-> return data
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(46)<module>()
-> data = calculate_additional_fields(data)
(Pdb) s
--Call--
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(25)calculate_additional_fields()
-> def calculate_additional_fields(data):
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(26)calculate_additional_fields()
-> for value in data.values():
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(27)calculate_additional_fields()
-> try:
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(28)calculate_additional_fields()
-> rental_start = datetime.datetime.strptime(value['rental_start'], '%m/%d/%y')
(Pdb) pp value
{'price_per_day': 31,
 'product_code': 'PRD80',
 'rental_end': '3/22/17',
 'rental_start': '6/12/17',
 'units_rented': 8}
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(29)calculate_additional_fields()
-> rental_end = datetime.datetime.strptime(value['rental_end'], '%m/%d/%y')
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(30)calculate_additional_fields()
-> value['total_days'] = (rental_end - rental_start).days
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(31)calculate_additional_fields()
-> value['total_price'] = value['total_days'] * value['price_per_day']
(Pdb) pp value['total_days']
-82
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(32)calculate_additional_fields()
-> value['sqrt_total_price'] = math.sqrt(value['total_price'])
(Pdb) pp value['total_price']
-2542
(Pdb) n
ValueError: math domain error
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(32)calculate_additional_fields()
-> value['sqrt_total_price'] = math.sqrt(value['total_price'])
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(34)calculate_additional_fields()
-> except:
(Pdb) n
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(35)calculate_additional_fields()
-> exit(0)
(Pdb) n
SystemExit: 0
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(35)calculate_additional_fields()
-> exit(0)
(Pdb) n
--Return--
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(35)calculate_additional_fields()->None
-> exit(0)
(Pdb) c
The program exited via sys.exit(). Exit status: 0
> c:\users\casari\version-control\uw\sp_python220b_2019\students\mattcasari\lesson02\assignment\charges_calc.py(3)<module>()
-> '''
(Pdb) exit

# ANALYSIS:
# The return date is prior to the start date, so the calculated total_price is negative.
# Therefore when the sqrt_price command is called, it is taking a sqrt of a negative number,
# throwing an error.


-------------------