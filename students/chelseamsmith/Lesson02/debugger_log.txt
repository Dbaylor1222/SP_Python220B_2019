Original code does not produce an output file because some of the rental start dates are after the rental end dates, leading to negative total rental prices,
leading to a ValueError when the code tries to get the square root of the total rental price, which, per the try-except block, causes the code to quit.

$ python -m pdb charges_calc.py -i source.json -o out.json
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(3)<module>()
-> '''
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(4)<module>()
-> import argparse
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(5)<module>()
-> import json
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(6)<module>()
-> import datetime
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(7)<module>()
-> import math
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(9)<module>()
-> def parse_cmd_arguments():
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(17)<module>()
-> def load_rentals_file(filename):
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(25)<module>()
-> def calculate_additional_fields(data):
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(39)<module>()
-> def save_to_json(filename, data):
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(43)<module>()
-> if __name__ == "__main__":
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(44)<module>()
-> args = parse_cmd_arguments()
(Pdb) s
--Call--
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(9)parse_cmd_argument                                                                                                                                                                                     s()
-> def parse_cmd_arguments():
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(10)parse_cmd_argumen                                                                                                                                                                                     ts()
-> parser = argparse.ArgumentParser(description='Process some integers.')
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(11)parse_cmd_argumen                                                                                                                                                                                     ts()
-> parser.add_argument('-i', '--input', help='input JSON file', required=True)
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(12)parse_cmd_argumen                                                                                                                                                                                     ts()
-> parser.add_argument('-o', '--output', help='ouput JSON file', required=True)
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(14)parse_cmd_argumen                                                                                                                                                                                     ts()
-> return parser.parse_args()
(Pdb) n
--Return--
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(14)parse_cmd_argumen                                                                                                                                                                                     ts()->Namespace(inp...ut='out.json')
-> return parser.parse_args()
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(45)<module>()
-> data = load_rentals_file(args.input)
(Pdb) s
--Call--
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(17)load_rentals_file()
-> def load_rentals_file(filename):
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(18)load_rentals_file()
-> with open(filename) as file:
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(19)load_rentals_file()
-> try:
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(20)load_rentals_file()
-> data = json.load(file)
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(23)load_rentals_file()
-> return data
(Pdb) n
--Return--
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(23)load_rentals_file()->{'RNT001'                                                                                                                                                                        : {'price_per_day': 31, 'product_code': 'PRD80', 'rental_end': '3/22/17', 'rental_start': '6/12/17', ..                                                                                                                                                                        .}, 'RNT002': {'price_per_day': 16, 'product_code': 'PRD11', 'rental_end': '9/30/18', 'rental_start': '                                                                                                                                                                        7/20/16', ...}, 'RNT003': {'price_per_day': 40, 'product_code': 'PRD22', 'rental_end': '6/4/17', 'renta                                                                                                                                                                        l_start': '2/1/16', ...}, 'RNT004': {'price_per_day': 40, 'product_code': 'PRD86', 'rental_end': '12/7/                                                                                                                                                                        17', 'rental_start': '8/14/16', ...}, ...}
-> return data
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(46)<module>()
-> data = calculate_additional_fields(data)
(Pdb) s
--Call--
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(25)calculate_additional_fields()
-> def calculate_additional_fields(data):
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(26)calculate_additional_fields()
-> for value in data.values():
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(27)calculate_additional_fields()
-> try:
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(28)calculate_additional_fields()
-> rental_start = datetime.datetime.strptime(value['rental_start'], '%m/%d/%y')
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(29)calculate_additional_fields()
-> rental_end = datetime.datetime.strptime(value['rental_end'], '%m/%d/%y')
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(30)calculate_additional_fields()
-> value['total_days'] = (rental_end - rental_start).days
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(31)calculate_additional_fields()
-> value['total_price'] = value['total_days'] * value['price_per_day']
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(32)calculate_additional_fields()
-> value['sqrt_total_price'] = math.sqrt(value['total_price'])
(Pdb) n
ValueError: math domain error
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(32)calculate_additional_fields()
-> value['sqrt_total_price'] = math.sqrt(value['total_price'])
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(34)calculate_additional_fields()
-> except:
(Pdb) n
> c:\users\chelsea\my documents\uwpython220\lesson2hw\charges_calc.py(35)calculate_additional_fields()
-> exit(0)
