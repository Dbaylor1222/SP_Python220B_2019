➜  lesson06 git:(master) ✗ python3 -m cProfile -s ncalls poor_perf.py
{'2013': 156279, '2014': 154602, '2015': 155376, '2016': 155800, '2017': 309951, '2018': 0}
'ao' was found 500138 times
4.094238996505737
         1031582 function calls (1031558 primitive calls) in 4.107 seconds

   Ordered by: call count

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  1000012    0.068    0.000    0.068    0.000 {method 'append' of 'list' objects}
    14722    0.020    0.000    0.020    0.000 {built-in method _codecs.utf_8_decode}
    14722    0.012    0.000    0.032    0.000 codecs.py:318(decode)
      232    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
      194    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}
      126    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:222(_verbose_message)
      120    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
      112    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:59(<listcomp>)
      112    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:57(_path_join)
       72    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
       56    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
	   
	   
➜  lesson06 git:(master) ✗ python3 -m cProfile -s tottime poor_perf.py
{'2013': 156279, '2014': 154602, '2015': 155376, '2016': 155800, '2017': 309951, '2018': 0}
'ao' was found 500138 times
3.959522008895874
         1031582 function calls (1031558 primitive calls) in 3.965 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    3.760    3.760    3.857    3.857 poor_perf.py:12(analyze)
        1    0.103    0.103    3.960    3.960 poor_perf.py:63(main)
  1000012    0.066    0.000    0.066    0.000 {method 'append' of 'list' objects}
    14722    0.018    0.000    0.018    0.000 {built-in method _codecs.utf_8_decode}
    14722    0.012    0.000    0.030    0.000 codecs.py:318(decode)
        3    0.001    0.000    0.001    0.000 {built-in method _imp.create_dynamic}
        4    0.001    0.000    0.001    0.000 {built-in method marshal.loads}
       15    0.000    0.000    0.000    0.000 {built-in method builtins.__build_class__}
	   
	   
➜  lesson06 git:(master) ✗ python3 poor_perf.py
{'2013': 156279, '2014': 154602, '2015': 155376, '2016': 155800, '2017': 309951, '2018': 0}
'ao' was found 500138 times
24.257002115249634
Timer unit: 1e-06 s

Total time: 15.0308 s
File: poor_perf.py
Function: analyze at line 17

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    17                                           @profile
    18                                           def analyze(filename):
    19         1         15.0     15.0      0.0      start = datetime.datetime.now()
    20         1         81.0     81.0      0.0      with open(filename) as csvfile:
    21         1          6.0      6.0      0.0          reader = csv.reader(csvfile, delimiter=',', quotechar='"')
    22         1          1.0      1.0      0.0          new_ones = []
    23   1000001    2465267.0      2.5     16.4          for row in reader:
    24   1000000    1137578.0      1.1      7.6              lrow = list(row)
    25   1000000     753604.0      0.8      5.0              if lrow[5] > '00/00/2012':
    26   1000000     855000.0      0.9      5.7                  new_ones.append((lrow[5], lrow[0]))
    27
    28                                                   year_count = {
    29         1          0.0      0.0      0.0              "2013": 0,
    30         1          1.0      1.0      0.0              "2014": 0,
    31         1          0.0      0.0      0.0              "2015": 0,
    32         1          1.0      1.0      0.0              "2016": 0,
    33         1          1.0      1.0      0.0              "2017": 0,
    34         1          1.0      1.0      0.0              "2018": 0
    35                                                   }
    36
    37   1000001     611062.0      0.6      4.1          for new in new_ones:
    38   1000000     805965.0      0.8      5.4              if new[0][6:] == '2013':
    39    156279     114343.0      0.7      0.8                  year_count["2013"] += 1
    40   1000000     778602.0      0.8      5.2              if new[0][6:] == '2014':
    41    154602     115629.0      0.7      0.8                  year_count["2014"] += 1
    42   1000000     773153.0      0.8      5.1              if new[0][6:] == '2015':
    43    155376     114563.0      0.7      0.8                  year_count["2015"] += 1
    44   1000000     795436.0      0.8      5.3              if new[0][6:] == '2016':
    45    155800     120307.0      0.8      0.8                  year_count["2016"] += 1
    46   1000000     804301.0      0.8      5.4              if new[0][6:] == '2017':
    47    154932     122092.0      0.8      0.8                  year_count["2017"] += 1
    48   1000000     786531.0      0.8      5.2              if new[0][6:] == '2018':
    49    155019     122178.0      0.8      0.8                  year_count["2017"] += 1
    50
    51         1       1827.0   1827.0      0.0          print(year_count)
    52
    53         1        119.0    119.0      0.0      with open(filename) as csvfile:
    54         1         16.0     16.0      0.0          reader = csv.reader(csvfile, delimiter=',', quotechar='"')
    55
    56         1          1.0      1.0      0.0          found = 0
    57
    58   1000001    1847516.0      1.8     12.3          for line in reader:
    59   1000000     937300.0      0.9      6.2              lrow = list(line)
    60   1000000     650277.0      0.7      4.3              if "ao" in line[6]:
    61    500138     317918.0      0.6      2.1                  found += 1
    62
    63         1         20.0     20.0      0.0          print(f"'ao' was found {found} times")
    64         1         55.0     55.0      0.0          end = datetime.datetime.now()
    65
    66         1          1.0      1.0      0.0      return start, end, year_count, found

Total time: 24.259 s
File: poor_perf.py
Function: main at line 69

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    69                                           @profile
    70                                           def main():
    71         1        114.0    114.0      0.0      filename = "data/exercise.csv"
    72         1          2.0      2.0      0.0      t0 = time.time()
    73         1   24256995.0 24256995.0    100.0      analyze(filename)
    74         1          3.0      3.0      0.0      t1 = time.time()
    75         1       1869.0   1869.0      0.0      print(t1-t0)
	

➜  lesson06 git:(master) ✗ python3 poor_perf.py
{'2013': 156279, '2014': 154602, '2015': 155376, '2016': 155800, '2017': 309951, '2018': 0}
'ao' was found 500138 times
16.938751935958862
Timer unit: 1e-06 s

Total time: 10.5647 s
File: poor_perf.py
Function: analyze at line 17

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    17                                           @profile
    18                                           def analyze(filename):
    19         1         30.0     30.0      0.0      start = datetime.datetime.now()
    20         1        118.0    118.0      0.0      with open(filename) as csvfile:
    21         1          9.0      9.0      0.0          reader = csv.reader(csvfile, delimiter=',', quotechar='"')
    22         1          1.0      1.0      0.0          new_ones = []
    23         1    2134673.0 2134673.0     20.2          [new_ones.append((list(row)[5], list(row)[0])) for row in reader if list(row)[5] > '00/00/2012']
    24
    25                                                   year_count = {
    26         1          2.0      2.0      0.0              "2013": 0,
    27         1          1.0      1.0      0.0              "2014": 0,
    28         1          1.0      1.0      0.0              "2015": 0,
    29         1          1.0      1.0      0.0              "2016": 0,
    30         1          1.0      1.0      0.0              "2017": 0,
    31         1          2.0      2.0      0.0              "2018": 0
    32                                                   }
    33
    34   1000001     526593.0      0.5      5.0          for new in new_ones:
    35   1000000     660015.0      0.7      6.2              if new[0][6:] == '2013':
    36    156279      97558.0      0.6      0.9                  year_count["2013"] += 1
    37   1000000     664687.0      0.7      6.3              if new[0][6:] == '2014':
    38    154602      96072.0      0.6      0.9                  year_count["2014"] += 1
    39   1000000     658436.0      0.7      6.2              if new[0][6:] == '2015':
    40    155376      99383.0      0.6      0.9                  year_count["2015"] += 1
    41   1000000     667775.0      0.7      6.3              if new[0][6:] == '2016':
    42    155800      96203.0      0.6      0.9                  year_count["2016"] += 1
    43   1000000     670769.0      0.7      6.3              if new[0][6:] == '2017':
    44    154932     100026.0      0.6      0.9                  year_count["2017"] += 1
    45   1000000     656471.0      0.7      6.2              if new[0][6:] == '2018':
    46    155019      99693.0      0.6      0.9                  year_count["2017"] += 1
    47
    48         1        126.0    126.0      0.0          print(year_count)
    49
    50         1        115.0    115.0      0.0      with open(filename) as csvfile:
    51         1         20.0     20.0      0.0          reader = csv.reader(csvfile, delimiter=',', quotechar='"')
    52
    53         1          1.0      1.0      0.0          found = 0
    54
    55   1000001    1611078.0      1.6     15.2          for line in reader:
    56   1000000     847102.0      0.8      8.0              lrow = list(line)
    57   1000000     587515.0      0.6      5.6              if "ao" in line[6]:
    58    500138     290179.0      0.6      2.7                  found += 1
    59
    60         1         21.0     21.0      0.0          print(f"'ao' was found {found} times")
    61         1         52.0     52.0      0.0          end = datetime.datetime.now()
    62
    63         1          1.0      1.0      0.0      return start, end, year_count, found

Total time: 16.9388 s
File: poor_perf.py
Function: main at line 66

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    66                                           @profile
    67                                           def main():
    68         1         49.0     49.0      0.0      filename = "data/exercise.csv"
    69         1          4.0      4.0      0.0      t0 = time.time()
    70         1   16938744.0 16938744.0    100.0      analyze(filename)
    71         1          3.0      3.0      0.0      t1 = time.time()
    72         1         42.0     42.0      0.0      print(t1-t0)
	
➜  lesson06 git:(master) ✗ python3 poor_perf.py
{'2013': 156279, '2014': 154602, '2015': 155376, '2016': 155800, '2017': 309951, '2018': 0}
'ao' was found 500138 times
Timer unit: 1e-06 s

Total time: 9.77201 s
File: poor_perf.py
Function: analyze at line 17

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    17                                           @profile
    18                                           def analyze(filename):
    19         1         22.0     22.0      0.0      start = datetime.datetime.now()
    20         1        117.0    117.0      0.0      with open(filename) as csvfile:
    21         1          8.0      8.0      0.0          reader = csv.reader(csvfile, delimiter=',', quotechar='"')
    22         1          1.0      1.0      0.0          new_ones = []
    23         1    2142227.0 2142227.0     21.9          [new_ones.append((list(row)[5], list(row)[0])) for row in reader if list(row)[5] > '00/00/2012']
    24
    25                                                   year_count = {
    26         1          4.0      4.0      0.0              "2013": 0,
    27         1          3.0      3.0      0.0              "2014": 0,
    28         1          0.0      0.0      0.0              "2015": 0,
    29         1          1.0      1.0      0.0              "2016": 0,
    30         1          1.0      1.0      0.0              "2017": 0,
    31         1          1.0      1.0      0.0              "2018": 0
    32                                                   }
    33
    34   1000001     526731.0      0.5      5.4          for new in new_ones:
    35   1000000     666002.0      0.7      6.8              if new[0][6:] == '2013':
    36    156279      95898.0      0.6      1.0                  year_count["2013"] += 1
    37   1000000     656060.0      0.7      6.7              if new[0][6:] == '2014':
    38    154602      95079.0      0.6      1.0                  year_count["2014"] += 1
    39   1000000     655858.0      0.7      6.7              if new[0][6:] == '2015':
    40    155376      96330.0      0.6      1.0                  year_count["2015"] += 1
    41   1000000     659165.0      0.7      6.7              if new[0][6:] == '2016':
    42    155800      96749.0      0.6      1.0                  year_count["2016"] += 1
    43   1000000     669709.0      0.7      6.9              if new[0][6:] == '2017':
    44    154932      95816.0      0.6      1.0                  year_count["2017"] += 1
    45   1000000     655450.0      0.7      6.7              if new[0][6:] == '2018':
    46    155019      96641.0      0.6      1.0                  year_count["2017"] += 1
    47
    48         1        169.0    169.0      0.0          print(year_count)
    49
    50         1        198.0    198.0      0.0      with open(filename) as csvfile:
    51         1         16.0     16.0      0.0          reader = csv.reader(csvfile, delimiter=',', quotechar='"')
    52
    53         1          1.0      1.0      0.0          found = 0
    54
    55   1000001    1679695.0      1.7     17.2          for line in reader:
    56                                                       # lrow = list(line)
    57   1000000     590436.0      0.6      6.0              if "ao" in line[6]:
    58    500138     293518.0      0.6      3.0                  found += 1
    59
    60         1         22.0     22.0      0.0          print(f"'ao' was found {found} times")
    61         1         77.0     77.0      0.0          end = datetime.datetime.now()
    62
    63         1          2.0      2.0      0.0      return start, end, year_count, found

Total time: 15.7998 s
File: poor_perf.py
Function: main at line 66

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    66                                           @profile
    67                                           def main():
    68         1          3.0      3.0      0.0      filename = "data/exercise.csv"
    69                                               # t0 = time.time()
    70         1   15799753.0 15799753.0    100.0      analyze(filename)
	
	
➜  lesson06 git:(master) ✗ python3 poor_perf.py
{'2013': 156279, '2014': 154602, '2015': 155376, '2016': 155800, '2017': 309951, '2018': 0}
'ao' was found 500138 times
Timer unit: 1e-06 s

Total time: 8.09454 s
File: poor_perf.py
Function: analyze at line 17

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    17                                           @profile
    18                                           def analyze(filename):
    19         1         28.0     28.0      0.0      start = datetime.datetime.now()
    20         1        119.0    119.0      0.0      with open(filename) as csvfile:
    21         1          8.0      8.0      0.0          reader = csv.reader(csvfile, delimiter=',', quotechar='"')
    22         1          0.0      0.0      0.0          new_ones = []
    23         1    2120048.0 2120048.0     26.2          [new_ones.append((list(row)[5], list(row)[0])) for row in reader if list(row)[5] > '00/00/2012']
    24
    25                                                   year_count = {
    26         1          1.0      1.0      0.0              "2013": 0,
    27         1          0.0      0.0      0.0              "2014": 0,
    28         1          0.0      0.0      0.0              "2015": 0,
    29         1          1.0      1.0      0.0              "2016": 0,
    30         1          1.0      1.0      0.0              "2017": 0,
    31         1          2.0      2.0      0.0              "2018": 0
    32                                                   }
    33
    34   1000001     511575.0      0.5      6.3          for new in new_ones:
    35   1000000     667083.0      0.7      8.2              if new[0][6:] == '2013':
    36    156279      94860.0      0.6      1.2                  year_count["2013"] += 1
    37    843721     547807.0      0.6      6.8              elif new[0][6:] == '2014':
    38    154602      93244.0      0.6      1.2                  year_count["2014"] += 1
    39    689119     448236.0      0.7      5.5              elif new[0][6:] == '2015':
    40    155376      92756.0      0.6      1.1                  year_count["2015"] += 1
    41    533743     344656.0      0.6      4.3              elif new[0][6:] == '2016':
    42    155800      92781.0      0.6      1.1                  year_count["2016"] += 1
    43    377943     247777.0      0.7      3.1              elif new[0][6:] == '2017':
    44    154932      92619.0      0.6      1.1                  year_count["2017"] += 1
    45    223011     144886.0      0.6      1.8              elif new[0][6:] == '2018':
    46    155019      92813.0      0.6      1.1                  year_count["2017"] += 1
    47
    48         1        136.0    136.0      0.0          print(year_count)
    49
    50         1        117.0    117.0      0.0      with open(filename) as csvfile:
    51         1         19.0     19.0      0.0          reader = csv.reader(csvfile, delimiter=',', quotechar='"')
    52
    53         1          1.0      1.0      0.0          found = 0
    54
    55   1000001    1635443.0      1.6     20.2          for line in reader:
    56                                                       # lrow = list(line)
    57   1000000     584990.0      0.6      7.2              if "ao" in line[6]:
    58    500138     282434.0      0.6      3.5                  found += 1
    59
    60         1         21.0     21.0      0.0          print(f"'ao' was found {found} times")
    61         1         80.0     80.0      0.0          end = datetime.datetime.now()
    62
    63         1          2.0      2.0      0.0      return start, end, year_count, found

Total time: 12.4984 s
File: poor_perf.py
Function: main at line 66

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    66                                           @profile
    67                                           def main():
    68         1          7.0      7.0      0.0      filename = "data/exercise.csv"
    69                                               # t0 = time.time()
    70         1   12498385.0 12498385.0    100.0      analyze(filename)

➜  lesson06 git:(master) ✗