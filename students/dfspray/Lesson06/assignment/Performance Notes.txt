Time notes:
 -Reader/append to new_ones for loop was the longest for loop, taking ~1.9101299630000312 seconds
 -The for loop to count the occurences of 'ao' was the second slowest at ~1.7577141919999804 seconds
 -The original perf.py took ~4.359304687000076 seconds
 -Just the 'analyze' method took ~4.304398147000029 seconds
 -The new_ones filter to categories for loop only takes ~0.6060509120000006 seconds

Strategy:
 -Try to remove the need to rewrite the dictionary as 'new_ones'
 -Attempt to speed up the iterator that counts the occurences of 'ao'
 -Clean up if statements iteration
 -Combine 'with' statements

Steps/Change Log:
 -Remove the need to rewrite the dictionary as 'new_ones' - REDUCED FULL PROGRAM TIME TO ~4.0504591320000145 seconds
 -Add continue to if statements so the code doesn't check every year after it finds a match - REDUCED FULL PROGRAM TIME TO ~3.9447713200002 seconds
 -Combined 'with' statements - REDUCED FULL PROGRAM TIME TO ~2.253778497999974 seconds
 -Replaced 'if' statements to filter by year with a try block - REDUCED FULL PROGRAM TIME TO ~2.0760061330001918 seconds
 -Removed lrow (converting the row to a list) - REDUCED FULL PROGRAM TIME TO ~1.8923317479998332 seconds
 -Removed 'main()' method - UNSURE ABOUT TIME DIFFERENCE, IF ANY

Total Time Improvement: ~2.467 seconds