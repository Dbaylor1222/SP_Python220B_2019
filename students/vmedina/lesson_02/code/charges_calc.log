D:\Users\Victor\Desktop\python_pwe\lesson02\assignment\code>python charges_calc.py
usage: charges_calc.py [-h] -i INPUT -o OUTPUT
charges_calc.py: error: the following arguments are required: -i/--input, -o/--output

D:\Users\Victor\Desktop\python_pwe\lesson02\assignment\code>python charges_calc.py -i source.json -o out.json

D:\Users\Victor\Desktop\python_pwe\lesson02\assignment\code>python -m pdb  charges_calc.py -i source.json -o out.json
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(3)<module>()
-> '''
(Pdb) ll
  1     '''
  2     Returns total price paid for individual rentals
  3  -> '''
  4     import argparse
  5     import json
  6     import datetime
  7     import math
  8
  9     def parse_cmd_arguments():
 10         parser = argparse.ArgumentParser(description='Process some integers.')
 11         parser.add_argument('-i', '--input', help='input JSON file', required=True)
 12         parser.add_argument('-o', '--output', help='ouput JSON file', required=True)
 13
 14         return parser.parse_args()
 15
 16
 17     def load_rentals_file(filename):
 18         with open(filename) as file:
 19             try:
 20                 data = json.load(file)
 21             except:
 22                 exit(0)
 23         return data
 24
 25     def calculate_additional_fields(data):
 26         for value in data.values():
 27             try:
 28                 rental_start = datetime.datetime.strptime(value['rental_start'], '%m/%d/%y')
 29                 rental_end = datetime.datetime.strptime(value['rental_end'], '%m/%d/%y')
 30                 value['total_days'] = (rental_end - rental_start).days
 31                 value['total_price'] = value['total_days'] * value['price_per_day']
 32                 value['sqrt_total_price'] = math.sqrt(value['total_price'])
 33                 value['unit_cost'] = value['total_price'] / value['units_rented']
 34             except:
 35                 exit(0)
 36
 37         return data
 38
 39     def save_to_json(filename, data):
 40         with open(filename, 'w') as file:
 41             json.dump(data, file)
 42
 43     if __name__ == "__main__":
 44         args = parse_cmd_arguments()
 45         data = load_rentals_file(args.input)
 46         data = calculate_additional_fields(data)
 47         save_to_json(args.output, data)

(Pdb) n
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(4)<module>()
-> import argparse
(Pdb) n
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(5)<module>()
-> import json
(Pdb) n
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(6)<module>()
-> import datetime
(Pdb) n
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(7)<module>()
-> import math
(Pdb) n
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(9)<module>()
-> def parse_cmd_arguments():
(Pdb) n
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(17)<module>()
-> def load_rentals_file(filename):
(Pdb) n
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(25)<module>()
-> def calculate_additional_fields(data):
(Pdb) n
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(39)<module>()
-> def save_to_json(filename, data):
(Pdb) n
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(43)<module>()
-> if __name__ == "__main__":
(Pdb) n
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(44)<module>()
-> args = parse_cmd_arguments()
(Pdb) s
--Call--
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(9)parse_cmd_arguments()
-> def parse_cmd_arguments():
(Pdb) n
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(10)parse_cmd_arguments()
-> parser = argparse.ArgumentParser(description='Process some integers.')
(Pdb) n
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(11)parse_cmd_arguments()
-> parser.add_argument('-i', '--input', help='input JSON file', required=True)
(Pdb) n
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(12)parse_cmd_arguments()
-> parser.add_argument('-o', '--output', help='ouput JSON file', required=True)
(Pdb) n
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(14)parse_cmd_arguments()
-> return parser.parse_args()
(Pdb) n
--Return--
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(14)parse_cmd_arguments()->Namespace(inp...ut='out.json')
-> return parser.parse_args()
(Pdb) n
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(45)<module>()
-> data = load_rentals_file(args.input)
(Pdb) print(args.input)
source.json
(Pdb) n
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(46)<module>()
-> data = calculate_additional_fields(data)
(Pdb) type(data)
<class 'dict'>
(Pdb) len(data)
999
(Pdb) n
SystemExit: 0
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(46)<module>()
-> data = calculate_additional_fields(data)
(Pdb) n
--Return--
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(46)<module>()->None
-> data = calculate_additional_fields(data)
(Pdb) n
SystemExit: 0
> <string>(1)<module>()->None
(Pdb) n
--Return--
> <string>(1)<module>()->None
(Pdb) n
The program exited via sys.exit(). Exit status: 0
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(3)<module>()
-> '''
(Pdb) b 26
Breakpoint 1 at d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py:26
(Pdb) ll
  1     '''
  2     Returns total price paid for individual rentals
  3  -> '''
  4     import argparse
  5     import json
  6     import datetime
  7     import math
  8
  9     def parse_cmd_arguments():
 10         parser = argparse.ArgumentParser(description='Process some integers.')
 11         parser.add_argument('-i', '--input', help='input JSON file', required=True)
 12         parser.add_argument('-o', '--output', help='ouput JSON file', required=True)
 13
 14         return parser.parse_args()
 15
 16
 17     def load_rentals_file(filename):
 18         with open(filename) as file:
 19             try:
 20                 data = json.load(file)
 21             except:
 22                 exit(0)
 23         return data
 24
 25     def calculate_additional_fields(data):
 26 B       for value in data.values():
 27             try:
 28                 rental_start = datetime.datetime.strptime(value['rental_start'], '%m/%d/%y')
 29                 rental_end = datetime.datetime.strptime(value['rental_end'], '%m/%d/%y')
 30                 value['total_days'] = (rental_end - rental_start).days
 31                 value['total_price'] = value['total_days'] * value['price_per_day']
 32                 value['sqrt_total_price'] = math.sqrt(value['total_price'])
 33                 value['unit_cost'] = value['total_price'] / value['units_rented']
 34             except:
 35                 exit(0)
 36
 37         return data
 38
 39     def save_to_json(filename, data):
 40         with open(filename, 'w') as file:
 41             json.dump(data, file)
 42
 43     if __name__ == "__main__":
 44         args = parse_cmd_arguments()
 45         data = load_rentals_file(args.input)
 46         data = calculate_additional_fields(data)
 47         save_to_json(args.output, data)
(Pdb) continue
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(26)calculate_additional_fields()
-> for value in data.values():
(Pdb) print(value)
*** NameError: name 'value' is not defined
(Pdb) n
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(27)calculate_additional_fields()
-> try:
(Pdb) print(value)
{'product_code': 'PRD80', 'units_rented': 8, 'price_per_day': 31, 'rental_start': '6/12/17', 'rental_end': '3/22/17'}
(Pdb) n
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(28)calculate_additional_fields()
-> rental_start = datetime.datetime.strptime(value['rental_start'], '%m/%d/%y')
(Pdb) print(rental_start)
*** NameError: name 'rental_start' is not defined
(Pdb) n
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(29)calculate_additional_fields()
-> rental_end = datetime.datetime.strptime(value['rental_end'], '%m/%d/%y')
(Pdb) print(rental_start)
2017-06-12 00:00:00
(Pdb) print(value)
{'product_code': 'PRD80', 'units_rented': 8, 'price_per_day': 31, 'rental_start': '6/12/17', 'rental_end': '3/22/17'}
(Pdb) n
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(30)calculate_additional_fields()
-> value['total_days'] = (rental_end - rental_start).days
(Pdb) print(rental_end)
2017-03-22 00:00:00
(Pdb) n
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(31)calculate_additional_fields()
-> value['total_price'] = value['total_days'] * value['price_per_day']
(Pdb) print(value)
{'product_code': 'PRD80', 'units_rented': 8, 'price_per_day': 31, 'rental_start': '6/12/17', 'rental_end': '3/22/17', 'total_days': -82}
(Pdb) n
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(32)calculate_additional_fields()
-> value['sqrt_total_price'] = math.sqrt(value['total_price'])
(Pdb) print(value)
{'product_code': 'PRD80', 'units_rented': 8, 'price_per_day': 31, 'rental_start': '6/12/17', 'rental_end': '3/22/17', 'total_days': -82, 'total_price': -2542}
(Pdb) n
ValueError: math domain error
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(32)calculate_additional_fields()
-> value['sqrt_total_price'] = math.sqrt(value['total_price'])
(Pdb) print(value)
{'product_code': 'PRD80', 'units_rented': 8, 'price_per_day': 31, 'rental_start': '6/12/17', 'rental_end': '3/22/17', 'total_days': -82, 'total_price': -2542}
(Pdb) n
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(34)calculate_additional_fields()
-> except:
(Pdb) n
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(35)calculate_additional_fields()
-> exit(0)
(Pdb) n
SystemExit: 0
> d:\users\victor\desktop\python_pwe\lesson02\assignment\code\charges_calc.py(35)calculate_additional_fields()
-> exit(0)
(Pdb)



