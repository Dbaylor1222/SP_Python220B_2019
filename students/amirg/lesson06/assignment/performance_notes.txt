First run with poor_perf.py:

/////////////////////////////////////////////////////////////////////////////////////////////////
In [3]: prun analyze("data/exercise.csv")
{'2013': 90865, '2014': 91023, '2015': 90294, '2016': 91483, '2017': 90779, '2018': 91334}
'ao' was found 499884 times
         1038461 function calls in 19.559 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1   18.106   18.106   19.393   19.393 poor_perf.py:9(analyze)
    19182    1.014    0.000    1.014    0.000 {built-in method _codecs.charmap_decode}
  1000000    0.216    0.000    0.216    0.000 {method 'append' of 'list' objects}
        1    0.166    0.166   19.559   19.559 <string>:1(<module>)
    19182    0.054    0.000    1.069    0.000 cp1252.py:22(decode)
        2    0.001    0.001    0.001    0.001 {built-in method io.open}
        4    0.000    0.000    0.000    0.000 {method 'flush' of '_io.TextIOWrapper' objects}
        4    0.000    0.000    0.000    0.000 {method 'write' of '_io.TextIOWrapper' objects}
        1    0.000    0.000   19.559   19.559 {built-in method builtins.exec}
        2    0.000    0.000    0.001    0.001 {built-in method builtins.print}
        4    0.000    0.000    0.000    0.000 ansitowin32.py:245(convert_osc)
        4    0.000    0.000    0.001    0.000 ansitowin32.py:177(write_and_convert)
        4    0.000    0.000    0.001    0.000 ansitowin32.py:193(write_plain_text)
        8    0.000    0.000    0.000    0.000 {method 'finditer' of 're.Pattern' objects}
        2    0.000    0.000    0.000    0.000 {built-in method _locale._getdefaultlocale}
        2    0.000    0.000    0.000    0.000 {built-in method now}
       39    0.000    0.000    0.000    0.000 future.py:47(__del__)
        2    0.000    0.000    0.000    0.000 {built-in method _csv.reader}
        2    0.000    0.000    0.000    0.000 _bootlocale.py:11(getpreferredencoding)
        4    0.000    0.000    0.001    0.000 ansitowin32.py:160(write)
        4    0.000    0.000    0.001    0.000 ansitowin32.py:40(write)
        2    0.000    0.000    0.000    0.000 codecs.py:260(__init__)
        4    0.000    0.000    0.000    0.000 {built-in method builtins.len}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
/////////////////////////////////////////////////////////////////////////////////////////////////

-Identified bottleneck in analyze function
-Instead of opening csv file twice, code was rewritten
 to only open file once and combine ao count with year count.
 As a result, analyze took a few less seconds to run (shown below):

/////////////////////////////////////////////////////////////////////////////////////////////////
In [10]: prun analyze("data/exercise.csv")
{'2013': 90865, '2014': 91023, '2015': 90294, '2016': 91483, '2017': 90779, '2018': 91334}
'ao' was found 499884 times
         1019245 function calls in 13.297 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1   12.387   12.387   13.130   13.130 good_perf.py:9(analyze)
     9591    0.509    0.000    0.509    0.000 {built-in method _codecs.charmap_decode}
  1000000    0.207    0.000    0.207    0.000 {method 'append' of 'list' objects}
        1    0.167    0.167   13.297   13.297 <string>:1(<module>)
     9591    0.026    0.000    0.535    0.000 cp1252.py:22(decode)
        1    0.001    0.001    0.001    0.001 {built-in method io.open}
        4    0.001    0.000    0.001    0.000 {method 'flush' of '_io.TextIOWrapper' objects}
        4    0.000    0.000    0.000    0.000 {method 'write' of '_io.TextIOWrapper' objects}
        1    0.000    0.000   13.297   13.297 {built-in method builtins.exec}
        8    0.000    0.000    0.000    0.000 {method 'finditer' of 're.Pattern' objects}
        2    0.000    0.000    0.001    0.001 {built-in method builtins.print}
        4    0.000    0.000    0.000    0.000 ansitowin32.py:245(convert_osc)
        4    0.000    0.000    0.001    0.000 ansitowin32.py:193(write_plain_text)
        4    0.000    0.000    0.001    0.000 ansitowin32.py:177(write_and_convert)
        2    0.000    0.000    0.000    0.000 {built-in method now}
        4    0.000    0.000    0.001    0.000 ansitowin32.py:160(write)
        1    0.000    0.000    0.000    0.000 {built-in method _locale._getdefaultlocale}
        1    0.000    0.000    0.000    0.000 _bootlocale.py:11(getpreferredencoding)
        4    0.000    0.000    0.001    0.000 ansitowin32.py:40(write)
        1    0.000    0.000    0.000    0.000 {built-in method _csv.reader}
       10    0.000    0.000    0.000    0.000 future.py:47(__del__)
        4    0.000    0.000    0.000    0.000 {built-in method builtins.len}
        1    0.000    0.000    0.000    0.000 codecs.py:260(__init__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
/////////////////////////////////////////////////////////////////////////////////////////////////

-To further reduce time, I commented out the new_ones code
 since it was conditionally checking each individual year
 I also commented out the lrow code checking dates newer than
 2012 since that code wasn't contributing.
 Instead, I reformatted the code to loop through each row (which 
 the ao count does already) and check if the year in the list matches
 any of the years in the year_count dict and adds it if there is.
 This shed off a few seconds (shown below)

/////////////////////////////////////////////////////////////////////////////////////////////////
In [2]: prun analyze("data/exercise.csv")
{'2013': 90865, '2014': 91023, '2015': 90294, '2016': 91483, '2017': 90779, '2018': 91334}
'ao' was found 499884 times
         19236 function calls in 7.917 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    7.365    7.365    7.917    7.917 good_perf.py:9(analyze)
     9591    0.519    0.000    0.519    0.000 {built-in method _codecs.charmap_decode}
     9591    0.031    0.000    0.550    0.000 cp1252.py:22(decode)
        1    0.001    0.001    0.001    0.001 {built-in method io.open}
        4    0.000    0.000    0.000    0.000 {method 'flush' of '_io.TextIOWrapper' objects}
        4    0.000    0.000    0.000    0.000 {method 'write' of '_io.TextIOWrapper' objects}
        1    0.000    0.000    7.917    7.917 {built-in method builtins.exec}
        2    0.000    0.000    0.001    0.000 {built-in method builtins.print}
        4    0.000    0.000    0.001    0.000 ansitowin32.py:193(write_plain_text)
        4    0.000    0.000    0.001    0.000 ansitowin32.py:177(write_and_convert)
        4    0.000    0.000    0.000    0.000 ansitowin32.py:245(convert_osc)
        8    0.000    0.000    0.000    0.000 {method 'finditer' of 're.Pattern' objects}
        2    0.000    0.000    0.000    0.000 {built-in method now}
        1    0.000    0.000    7.917    7.917 <string>:1(<module>)
        1    0.000    0.000    0.000    0.000 {built-in method _locale._getdefaultlocale}
        4    0.000    0.000    0.001    0.000 ansitowin32.py:160(write)
        4    0.000    0.000    0.001    0.000 ansitowin32.py:40(write)
        1    0.000    0.000    0.000    0.000 {built-in method _csv.reader}
        1    0.000    0.000    0.000    0.000 _bootlocale.py:11(getpreferredencoding)
        4    0.000    0.000    0.000    0.000 {built-in method builtins.len}
        1    0.000    0.000    0.000    0.000 codecs.py:260(__init__)
        1    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


/////////////////////////////////////////////////////////////////////////////////////////////////